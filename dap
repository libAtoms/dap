#!/usr/bin/env python

from __future__ import print_function

import ase.io, vtk, sys, os
from davtk.settings import DavTKSettings
from davtk.parse import parse_file
from davtk.state import *
from davtk.interactors import *
import argparse

cli_parse = argparse.ArgumentParser()
cli_parse.add_argument("--geometry",nargs=2,type=int,default=[800,800])
cli_parse.add_argument("atom_files",nargs="+",type=str)
args = cli_parse.parse_args()

# read atoms from atom_files
at_list = []
for f in args.atom_files:
    for at in ase.io.read(f,":"):
        at.info["_vtk_filename"] = f
        at_list.append(at)

settings = DavTKSettings()
try:
    parse_file(os.path.join(os.environ["HOME"],".daprc"), settings=settings)
except IOError:
    pass
try:
    parse_file(".daprc", settings=settings)
except IOError:
    pass

# A renderer and render window
renderer = vtk.vtkRenderer()
renderer.SetBackground(settings["background_color"])
renwin = vtk.vtkRenderWindow()
renwin.SetSize(args.geometry[0], args.geometry[1])
renwin.AddRenderer(renderer)

# An interactor for mouse stuff
interactor = vtk.vtkRenderWindowInteractor()
interactor.SetRenderWindow(renwin)

davtk_state = DaVTKState(at_list, settings, renderer, interactor)

# add the custom styles for regular interaction and area selection
sel_style = RubberbandSelect(davtk_state,parent=interactor)
sel_style.SetDefaultRenderer(renderer)

def_style = MouseInteractorHighLightActor(settings,davtk_state,sel_style,parent=interactor)
def_style.SetDefaultRenderer(renderer)
def_style.UseTimersOn()
interactor.CreateRepeatingTimer(100)

interactor.SetInteractorStyle(def_style)

# set up camera
(min_pos, max_pos) = find_min_max(at_list)
camera = renderer.GetActiveCamera()
camera.ParallelProjectionOn()
camera.SetParallelScale(np.max(max_pos-min_pos))
transform = vtk.vtkTransform()
extent = max(max_pos) - min(min_pos)
camera.SetPosition([(max_pos[0]+min_pos[0])/2.0, (max_pos[1]+min_pos[1])/2.0, 1000.0+extent/2.0])
camera.SetFocalPoint((max_pos+min_pos)/2.0)
camera.SetClippingRange(1000-extent/2.0, 1000+3*extent/2.0)

# start viewing first frame
davtk_state.update()
davtk_state.show_frame(frame_i=0)

print("""DAP

Use 'usage' for general usage info, and 'command -h' for detailed help on each command.
Type 'h' in GUI window for GUI help message
""")
# Start
print("> "); sys.stdout.flush()
interactor.Initialize()
interactor.Start()
